package Model.RecommendationModel.CustomTypes.POJOs.User;

import Model.RecommendationModel.CustomTypes.POJOs.User.RecommendationPreferences.WithinSiteUserRecAutoCheckinPrefs;
import Model.RecommendationModel.CustomTypes.POJOs.User.RecommendationPreferences.WithinSiteUserRecPrefsAutoCheckinPlace;
import Model.RecommendationModel.CustomTypes.SupportedDevices;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import org.bson.types.ObjectId;

import java.util.ArrayList;

/**
 * User: adav
 */
public class WithinSiteUser extends BasicDBObject{

    public WithinSiteUser(){}

    public WithinSiteUser(String email, String fbAccessToken, String pushNotificationToken, SupportedDevices deviceType){
        put("email", email);
        put("fb_access_token", fbAccessToken);
        put("push_token", pushNotificationToken);
        put("device_registered", deviceType.toString());
    }

    public static WithinSiteUser getUserByEmail(String userEmail){
        DB db = Model.Util.getDB();

        try {
            db.requestStart();
            db.requestEnsureConnection();

            DBCollection userColl = db.getCollection("withinsite.users");
            userColl.setObjectClass(WithinSiteUser.class);

            DBCursor dbCursor = userColl.find(new BasicDBObject("email", userEmail));
            try {

                if (dbCursor.count() == 1 & dbCursor.hasNext()) {
                    return (WithinSiteUser) dbCursor.next();
                }
            } finally {
                dbCursor.close();
            }


        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            db.requestDone();
        }

        return null;
    }

    public ObjectId getMongoId(){
        return getObjectId("_id");
    }

    public String getEmail(){
        return getString("email");
    }

    public String getFbAccessToken(){
        return getString("fb_access_token");
    }

    public String getPushNotificationToken(){
        return getString("push_token");
    }

    public SupportedDevices getDeviceType(){
        return SupportedDevices.valueOf(getString("device_registered"));
    }

    public ArrayList<BasicDBObject> getLocations(){

        return (ArrayList<BasicDBObject>) get("locations");
    }

    public WithinSiteUserLocation getMostRecentLocation(){
        ArrayList<BasicDBObject> locations = getLocations();
        return new WithinSiteUserLocation(locations.get(locations.size()-1));
    }

    public ArrayList<BasicDBObject> getAutoCheckins(){
        return (ArrayList<BasicDBObject>) get("auto_checkins");
    }

    public WithinSiteUserRecAutoCheckinPrefs getAutoCheckinPreferences(){
        return new WithinSiteUserRecAutoCheckinPrefs((BasicDBObject) get("auto_checkin_prefs"));
    }

}
